openapi: 3.0.0
info:
  title: Innoduel API
  description: API for accessing and analyzing arenas, ideas, and voting data within the Innoduel Dashboard Application.
  version: 1.0.0
servers:
  - url: http://localhost:8000/
    description: Development server
paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User Login
      description: Authenticates a user based on email and password. No actual validation or authentication is performed at this stage.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                  description: The user's email address.
                password:
                  type: string
                  example: securepassword
                  description: The user's password.
              required:
                - email
                - password
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
        400:
          description: Email and password are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email and password are required
  
  /api/users:
    get:
      tags:
        - Only to be used for admin role
      summary: Returns all users
      description: >
        **This API endpoint should be used cautiously due to data security concerns and the extensive nature of the information returned.** Retrieves a list of all users in the system. 
      operationId: getUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: No users found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/companies:
    get:
      tags:
        - Only to be used for admin role
      summary: Fetches all companies
      description: >
        **This API should be used cautiously in the production version due to the requirement and data security concern.** Retrieves a list of all companies, including sensitive information such as billing addresses and stripe customer IDs. Use with caution and ensure proper security measures are in place.
      operationId: getCompanies
      responses:
        '200':
          description: A list of companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
        '404':
          description: No companies found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/ideas:
    get:
      tags:
        - Only to be used for admin role
      summary: Fetches all ideas
      description: >
        **This API should be used cautiously in the production version due to the requirement and data security concern.** Retrieves a comprehensive list of ideas, including details on creation, status (active or deleted), win rate, and associated user and arena information. Use with caution and ensure proper security measures are in place.
      operationId: getIdeas
      responses:
        '200':
          description: A list of ideas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdeaExtended'
        '404':
          description: No ideas found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/arenas/{company_id}/arenas:
    get:
      tags:
        - Arenas
      summary: Get Arena Summaries
      description: Returns summaries for all arenas, including counts of ideas submitted, total votes, and overall win rates.
      parameters:
      - in: path
        name: company_id
        required: true
        schema:
          type: integer
        description: The unique identifier of the company to fetch arenas.
      responses:
        200:
          description: List of arena summaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArenaSummary"
        404:
          description: No arenas found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No arenas found

  
  /api/arenas/{company_id}/{arena_id}:
    get:
      tags:
        - Arenas
      summary: Get Detailed Arena Information by company_id and arena_id
      description: Retrieves detailed information for a specific arena within a given company by company_id and arena_id.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the company that owns the arena
        - in: path
          name: arena_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the arena within the specified company
      responses:
        200:
          description: Detailed information of a specific arena within the specified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArenaSummary"
        404:
          description: Arena not found or does not belong to the specified company

  /api/arenas/{company_id}/compare:
    get:
      tags:
        - Arenas
      summary: Compare Multiple Arenas
      description: |
        Allows for the comparison of key metrics across selected arenas using a comma-separated list of arena IDs. 
        Requires at least two arena IDs to perform the comparison.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the company associated with the arenas.
        - in: query
          name: ids
          required: true
          schema:
            type: array
            items:
              type: integer
            minItems: 2
          style: form
          explode: true
          description: |
            A list of arena IDs for comparison. The list must contain at least two IDs.
            - **style: form** and **explode: true** indicates that each value of the array will be passed as a separate parameter (e.g., `?ids=1&ids=2&ids=3`).
      responses:
        200:
          description: Comparison data for selected arenas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArenaSummary"
        404:
          description: One or more arenas not found

  /api/arenas/{company_id}/{arena_id}/ideas:
    get:
      tags:
        - Arenas
      summary: Get Detailed Ideas List for Specific Arena
      description: |
        Retrieves a detailed list of ideas for a specific arena, including votes and win rates.
        Supports sorting by 'win_rate' or 'total_votes' and filtering by a minimum vote threshold.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the company associated with the arena.
        - in: path
          name: arena_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the arena.
        - in: query
          name: sort
          schema:
            type: string
            enum: [win_rate, total_votes]
          description: |
            Specifies the sorting criterion of the ideas list.
            - 'win_rate': Sort ideas by their win rates.
            - 'total_votes': Sort ideas by their total votes.
          required: false
        - in: query
          name: order
          schema:
            type: string
            enum: [asc, desc]
          description: |
            Specifies the sorting order.
            - 'asc': Ascending order.
            - 'desc': Descending order.
          required: false
        - in: query
          name: min_votes
          schema:
            type: integer
          description: |
            Filters ideas by a minimum number of total votes. Only ideas with votes equal to or greater than this threshold will be included.
          required: false
      responses:
        200:
          description: A detailed list of ideas within the specified arena, including votes and win rates, sorted and filtered as requested.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IdeaDetail"
        404:
          description: Arena not found
          content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Arena not found

  /api/arenas/{company_id}/find_matching_arenas/{arenaId}:
    get:
      tags:
        - Arenas
      summary: Find Matching Arenas
      description: |
        Finds arenas within the same company that have identical sets of ideas to the target arena. 
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the company.
        - in: path
          name: arenaId
          required: true
          schema:
            type: integer
          description: The unique identifier of the target arena to compare against other arenas in the same company.
      responses:
        200:
          description: A list of arenas matching the target arena's set of ideas.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    arena_id:
                      type: integer
                      description: The unique identifier of the matching arena.
                    arena_name:
                      type: string
                      description: The name of the matching arena.
        404:
          description: Target arena not found or no matching arenas found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Target arena not found
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/arenas/{company_id}/compare_win_rate/{arenaId1}/{arenaId2}:
    get:
      tags:
        - Arenas
      summary: Compare Ideas Win Rate
      description: Compares the win rates of same ideas between two arenas belonging to the same company.
      operationId: compareIdeasWinRate
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the company.
        - in: path
          name: arenaId1
          required: true
          schema:
            type: integer
          description: The unique identifier of the first arena.
        - in: path
          name: arenaId2
          required: true
          schema:
            type: integer
          description: The unique identifier of the second arena.
      responses:
        200:
          description: A list of ideas present in both arenas with their corresponding scaled win rates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdeaComparison'
        400:
          description: Invalid input data. Either company ID or arena IDs are not valid integers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: One or both arenas not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/votes/{company_id}/all:
    get:
      tags:
        - Votes
      summary: Get all votes by company ID
      description: Retrieves all votes for ideas associated with arenas owned by the specified company.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The ID of the company to retrieve votes for.
      responses:
        200:
          description: A list of votes for the specified company
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
        404:
          description: No votes found for the specified company

  /api/votes/{company_id}/distribution:
    get:
      tags:
        - Votes
      summary: Get Vote Distribution for All Arenas
      description: Retrieves vote distributions across all arenas for a given company.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The ID of the company to retrieve vote distributions for.
      responses:
        200:
          description: Vote distribution data for all arenas associated with the given company.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoteDistributions'
        404:
          description: No ideas found for the given company_id

  /api/votes/{company_id}/{arena_id}/distribution:
    get:
      tags:
        - Votes
      summary: Get Vote Distribution for All Arenas
      description: Retrieves vote distributions across all arenas for a given company.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The ID of the company to retrieve vote distributions for.
        - in: path
          name: arena_id
          required: true
          schema:
            type: integer
          description: The ID of the arena to retrieve vote distributions for.
      responses:
        200:
          description: Vote distribution data for all arenas associated with the given company.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoteDistributions'
        404:
          description: No ideas found for the given company_id
  
  /api/votes/{company_id}/{arena_ids}/distribution/compare:
    get:
      tags:
        - Votes
      summary: Compare Vote Distribution Across Multiple Arenas
      description: |
        Retrieves and compares vote distribution across selected arenas within a specific company.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The ID of the company for which to compare vote distribution across arenas.
        - in: query
          name: arena_ids
          required: true
          schema:
            type: array
            tems:
              type: integer
            minItems: 2
          style: form
          explode: true
          description: |
            Comma-separated list or array of arena IDs for which to compare vote distribution. A minimum of two arena IDs are required to perform the comparison.
      responses:
        200:
          description: Vote distribution comparison data for selected arenas
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_votes_across_arenas:
                    type: integer
                    description: The total number of votes across all specified arenas.
                  vote_distribution_per_idea:
                    type: array
                    items:
                      $ref: "#/components/schemas/VoteDistributions"
        404:
          description: One or more arenas not found


  /api/arenas/{company_id}/{arena_id}/win_rate/trends:
    get:
      tags:
        - Arenas
      summary: Win Rate Trends for Specific Arena
      description: Visualizes the win rate trends of top ideas over time within a specific arena.
      parameters:
        - in: path
          name: company_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the company associated with the arena
        - in: path
          name: arena_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the arena
      responses:
        200:
          description: Win rate trend data for the specified arena
          content:
            application/json:
              schema:
                type: object
                properties:
                  arena_id:
                    type: integer
                  trends:
                    type: array
                    items:
                      type: object
                      properties:
                        idea_id:
                          type: integer
                        winRateOverTime:
                          type: array
                          items:
                            type: object
                            properties:
                              timestamp:
                                type: string
                                format: date-time
                              winRate:
                                type: string
        404:
          description: Arena not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Arena not found

components:
  schemas:
    ArenaSummary:
      type: object
      properties:
        arena_id:
          type: integer
        total_ideas:
          type: integer
        total_votes:
          type: integer
        overall_win_rate:
          type: string
    
    Vote:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        idea_id:
          type: integer
        win:
          type: boolean
        created:
          type: string
          format: date-time
        idea:
          type: object
          properties:
            id:
              type: integer
            idea_text:
              type: string
            arena:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
        user_info:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

    VoteDistributions:
      type: object
      properties:
        total_votes:
          type: integer
          description: The total number of votes.
        vote_distributions:
          type: array
          items:
            $ref: '#/components/schemas/VoteDistribution'
    VoteDistribution:
      type: object
      properties:
        idea_id:
          type: integer
          description: The ID of the idea.
        idea_text:
          type: string
          description: The text of the idea.
        arena_id:
          type: integer
          description: The ID of the arena that the idea belongs to.
        arena_name:
          type: string
          description: The name of the arena.
        total_votes:
          type: integer
          description: The total number of votes for the idea.

    IdeaDetail:
      type: object
      properties:
        idea_id:
          type: integer
          description: The unique identifier of the idea.
          example: 1
        idea_text:
          type: string
          description: The text of the idea submitted to the arena.
          example: "Implement a new voting system."
        win_rate:
          type: string
          description: The win rate of the idea, expressed as a percentage.
          example: "75%"
        total_votes:
          type: integer
          description: The total number of votes this idea has received.
          example: 150
        created_at:
          type: string
          format: date-time
          description: The timestamp when the idea was submitted.
          example: "2023-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: The timestamp when the idea was last updated.
          example: "2023-01-02T12:00:00Z"
        tags:
          type: array
          items:
            type: string
          description: A list of tags associated with the idea for categorization or filtering.
          example: ["innovation", "voting"]
        comments_count:
          type: integer
          description: The number of comments made on the idea.
          example: 25
        author:
          type: object
          properties:
            user_id:
              type: integer
              description: The unique identifier of the idea's author.
              example: 42
            username:
              type: string
              description: The username of the idea's author.
              example: "idea_creator"
      required:
        - idea_id
        - idea_text
        - win_rate
        - total_votes
    User:
      type: object
      properties:
        id:
          type: string
          description: The user's ID.
        name:
          type: string
          description: The user's name.
        email:
          type: string
          description: The user's email address.
        password:
          type: string
          description: The user's password. **Caution: Exposing this information poses a significant security risk.**
        anon:
          type: boolean
          description: Indicates if the user is anonymous.
        created:
          type: string
          format: date-time
          description: The creation date of the user account.
        last_login:
          type: string
          format: date-time
          description: The last login time of the user.
        company_id:
          type: string
          description: The ID of the company the user belongs to.
        marketing_consent:
          type: boolean
          description: Indicates if the user has consented to marketing communications.
        arena:
          type: string
          description: The arena or field in which the user operates.
    Error:
      type: object
      properties:
        message:
          type: string
          description: A message detailing the error.
  
    Company:
      type: object
      properties:
        id:
          type: string
          description: The company's ID.
        name:
          type: string
          description: The company's name.
        billing_address:
          type: string
          description: The billing address of the company.
        city:
          type: string
          description: The city where the company is located.
        zip:
          type: string
          description: The postal code for the company.
        country:
          type: string
          description: The country where the company is located.
        logo_image_url:
          type: string
          description: The URL to the company's logo image.
        plan_id:
          type: string
          description: The ID of the subscription plan the company is on.
        valid_until:
          type: string
          format: date-time
          description: The expiration date of the company's current subscription plan.
        stripe_customer_id:
          type: string
          description: The Stripe customer ID associated with the company.
        is_trial:
          type: boolean
          description: Indicates if the company is currently in a trial subscription.
    
    IdeaExtended:
      type: object
      properties:
        id:
          type: integer
        idea_text:
          type: string
        user_id:
          type: integer
        arena_id:
          type: integer
        created:
          type: string
          format: date-time
        active:
          type: boolean
        win_rate:
          type: string
        win_rate_updated:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_deleted_time:
          type: string
          format: date-time
        is_deleted_by_user_id:
          type: integer
        is_seed:
          type: boolean
        arena:
          $ref: '#/components/schemas/ArenaSummary'
        user_info_idea_is_deleted_by_user_idTouser_info:
          $ref: '#/components/schemas/User'
        user_info_idea_user_idTouser_info:
          $ref: '#/components/schemas/User'
        inappropriate_idea:
          type: boolean
        vote:
          type: array
          items:
            $ref: '#/components/schemas/Vote'
      
    IdeaComparison:
      type: object
      properties:
        idea_text:
          type: string
          description: The text of the idea being compared.
        arena1_winRate:
          type: number
          format: float
          description: The scaled win rate of the idea in the first arena.
        arena2_winRate:
          type: number
          format: float
          description: The scaled win rate of the idea in the second arena.
      required:
        - idea_text
        - arena1_winRate
        - arena2_winRate
    Error:
      type: object
      properties:
        message:
          type: string
          description: A message detailing the error.

